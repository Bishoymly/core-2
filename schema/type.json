{
  "name": "type",
  "display": "Type",
  "inheritFrom": "Object",
  "api": "CRUD",
  "displayAs": "name",
  "idAs": "name",
  "showInMenu": false,
  "properties": [
    {
      "name": "name",
      "display": "Name",
      "helpText": "The name that is used to identify this type",
      "type": "String",
      "required": true
    },
    {
      "name": "display",
      "display": "Display",
      "helpText": "The name that will be displayed for this type",
      "type": "String",
      "default": " "
    },
    {
      "name": "inheritFrom",
      "display": "Inherit from",
      "example": "Object",
      "helpText": "The data type of this field",
      "type": "String",
      "uiControl": "Select",
      "required": true,
      "lookupFromType": "type",
      "default": "Object"
    },
    {
      "name": "api",
      "display": "Backend API",
      "type": "String",
      "helpText": "Should this appear editable in admin menu?",
      "example": "CRUD"
    },
    {
      "name": "properties",
      "display": "Properties",
      "helpText": "The fields for this type",
      "type": "property",
      "isArray": true
    },
    {
      "name": "methods",
      "display": "Methods",
      "helpText": "Custom logic for this type",
      "type": "method",
      "isArray": true
    },
    {
      "name": "showInMenu",
      "display": "Show in menu",
      "type": "Boolean"
    },
    {
      "name": "displayAs",
      "display": "Display As Expression",
      "helpText": "An expression to display object of this type",
      "type": "String"
    },
    {
      "name": "idAs",
      "display": "Id As Expression",
      "helpText": "An expression for id of this object",
      "type": "String"
    }
  ],
  "methods": [
    {
      "name": "onChange",
      "code": "if(this.name !== this.display){\r\n    if(!this.display || !this.name || this.display.toLowerCase().replace(/ /g, \"\") === this.name.toLowerCase().replace(/ /g, \"\") || this.display.toLowerCase().replace(/ /g, \"\") === this.name.toLowerCase().replace(/ /g, \"\").slice(0, -1)){\r\n        const words = this.name.replace(/([A-Z])/g, \" $1\");\r\n        const upperWords = words.charAt(0).toUpperCase() + words.slice(1);\r\n        this.display = upperWords;\r\n    }\r\n}"
    }
  ]
}
